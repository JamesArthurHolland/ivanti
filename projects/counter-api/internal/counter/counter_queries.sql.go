// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: counter_queries.sql

package counter

import (
	"context"

	"github.com/google/uuid"
)

const fetchCounter = `-- name: FetchCounter :one
SELECT count FROM counters WHERE id = $1
`

func (q *Queries) FetchCounter(ctx context.Context, id uuid.UUID) (int32, error) {
	row := q.db.QueryRowContext(ctx, fetchCounter, id)
	var count int32
	err := row.Scan(&count)
	return count, err
}

const insertCounter = `-- name: InsertCounter :one
UPDATE counters SET count = count + 1 WHERE id = $1 RETURNING id, count
`

func (q *Queries) InsertCounter(ctx context.Context, id uuid.UUID) (Counter, error) {
	row := q.db.QueryRowContext(ctx, insertCounter, id)
	var i Counter
	err := row.Scan(&i.ID, &i.Count)
	return i, err
}
