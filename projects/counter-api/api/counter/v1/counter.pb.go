// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: counter/v1/counter.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Counter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Counter) Reset() {
	*x = Counter{}
	mi := &file_counter_v1_counter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Counter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Counter) ProtoMessage() {}

func (x *Counter) ProtoReflect() protoreflect.Message {
	mi := &file_counter_v1_counter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Counter.ProtoReflect.Descriptor instead.
func (*Counter) Descriptor() ([]byte, []int) {
	return file_counter_v1_counter_proto_rawDescGZIP(), []int{0}
}

func (x *Counter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Counter) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FetchCounterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchCounterRequest) Reset() {
	*x = FetchCounterRequest{}
	mi := &file_counter_v1_counter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchCounterRequest) ProtoMessage() {}

func (x *FetchCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_counter_v1_counter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchCounterRequest.ProtoReflect.Descriptor instead.
func (*FetchCounterRequest) Descriptor() ([]byte, []int) {
	return file_counter_v1_counter_proto_rawDescGZIP(), []int{1}
}

func (x *FetchCounterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FetchCounterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchCounterResponse) Reset() {
	*x = FetchCounterResponse{}
	mi := &file_counter_v1_counter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchCounterResponse) ProtoMessage() {}

func (x *FetchCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_counter_v1_counter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchCounterResponse.ProtoReflect.Descriptor instead.
func (*FetchCounterResponse) Descriptor() ([]byte, []int) {
	return file_counter_v1_counter_proto_rawDescGZIP(), []int{2}
}

func (x *FetchCounterResponse) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type InsertCounterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertCounterRequest) Reset() {
	*x = InsertCounterRequest{}
	mi := &file_counter_v1_counter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertCounterRequest) ProtoMessage() {}

func (x *InsertCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_counter_v1_counter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertCounterRequest.ProtoReflect.Descriptor instead.
func (*InsertCounterRequest) Descriptor() ([]byte, []int) {
	return file_counter_v1_counter_proto_rawDescGZIP(), []int{3}
}

func (x *InsertCounterRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type InsertCounterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Counter       *Counter               `protobuf:"bytes,1,opt,name=counter,proto3" json:"counter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertCounterResponse) Reset() {
	*x = InsertCounterResponse{}
	mi := &file_counter_v1_counter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertCounterResponse) ProtoMessage() {}

func (x *InsertCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_counter_v1_counter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertCounterResponse.ProtoReflect.Descriptor instead.
func (*InsertCounterResponse) Descriptor() ([]byte, []int) {
	return file_counter_v1_counter_proto_rawDescGZIP(), []int{4}
}

func (x *InsertCounterResponse) GetCounter() *Counter {
	if x != nil {
		return x.Counter
	}
	return nil
}

var File_counter_v1_counter_proto protoreflect.FileDescriptor

const file_counter_v1_counter_proto_rawDesc = "" +
	"\n" +
	"\x18counter/v1/counter.proto\x12\n" +
	"counter.v1\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"/\n" +
	"\aCounter\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"%\n" +
	"\x13FetchCounterRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\",\n" +
	"\x14FetchCounterResponse\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\"&\n" +
	"\x14InsertCounterRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"F\n" +
	"\x15InsertCounterResponse\x12-\n" +
	"\acounter\x18\x01 \x01(\v2\x13.counter.v1.CounterR\acounter2\xf4\x01\n" +
	"\x0eCounterService\x12n\n" +
	"\fFetchCounter\x12\x1f.counter.v1.FetchCounterRequest\x1a .counter.v1.FetchCounterResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/fetch-counter/{id}\x12r\n" +
	"\rInsertCounter\x12 .counter.v1.InsertCounterRequest\x1a!.counter.v1.InsertCounterResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*b\acounter\x1a\b/counterB\xc0\x02\x92A\xfb\x01\x12\xf8\x01\n" +
	"0github.com/JamesArthurHolland/ivanti/profile-api\x12\x83\x01Boilerplate code generated by **sqlc-grpc**. Modify _proto/*.proto_ files then run `buf generate` to change the services interface.\"9\n" +
	"\tsqlc-grpc\x12,https://github.com/walterwanderley/sqlc-grpc2\x031.0Z?github.com/JamesArthurHolland/ivanti/profile-api/api/counter/v1b\x06proto3"

var (
	file_counter_v1_counter_proto_rawDescOnce sync.Once
	file_counter_v1_counter_proto_rawDescData []byte
)

func file_counter_v1_counter_proto_rawDescGZIP() []byte {
	file_counter_v1_counter_proto_rawDescOnce.Do(func() {
		file_counter_v1_counter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_counter_v1_counter_proto_rawDesc), len(file_counter_v1_counter_proto_rawDesc)))
	})
	return file_counter_v1_counter_proto_rawDescData
}

var file_counter_v1_counter_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_counter_v1_counter_proto_goTypes = []any{
	(*Counter)(nil),               // 0: counter.v1.Counter
	(*FetchCounterRequest)(nil),   // 1: counter.v1.FetchCounterRequest
	(*FetchCounterResponse)(nil),  // 2: counter.v1.FetchCounterResponse
	(*InsertCounterRequest)(nil),  // 3: counter.v1.InsertCounterRequest
	(*InsertCounterResponse)(nil), // 4: counter.v1.InsertCounterResponse
}
var file_counter_v1_counter_proto_depIdxs = []int32{
	0, // 0: counter.v1.InsertCounterResponse.counter:type_name -> counter.v1.Counter
	1, // 1: counter.v1.CounterService.FetchCounter:input_type -> counter.v1.FetchCounterRequest
	3, // 2: counter.v1.CounterService.InsertCounter:input_type -> counter.v1.InsertCounterRequest
	2, // 3: counter.v1.CounterService.FetchCounter:output_type -> counter.v1.FetchCounterResponse
	4, // 4: counter.v1.CounterService.InsertCounter:output_type -> counter.v1.InsertCounterResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_counter_v1_counter_proto_init() }
func file_counter_v1_counter_proto_init() {
	if File_counter_v1_counter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_counter_v1_counter_proto_rawDesc), len(file_counter_v1_counter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_counter_v1_counter_proto_goTypes,
		DependencyIndexes: file_counter_v1_counter_proto_depIdxs,
		MessageInfos:      file_counter_v1_counter_proto_msgTypes,
	}.Build()
	File_counter_v1_counter_proto = out.File
	file_counter_v1_counter_proto_goTypes = nil
	file_counter_v1_counter_proto_depIdxs = nil
}
