name: 'Build'
description: 'Builds containers'
inputs:
  ozone_context:
    description: 'Ozone context'
    required: true
  ozone_version:
    description: 'Ozone version'
    required: true
  env:
    description: 'Environment'
    required: true
  service_name:
    description: 'Service name.'
    required: true
  is_release_version:
    description: 'Is release version'
    required: true
  lke_creds:
    description: 'LKE creds'
    required: true
  docker_username:
    description: 'Docker username'
    required: true
  docker_password:
    description: 'Docker password'
    required: true

runs:
  using: "composite"
  steps:
    # Install dependencies
    - name: Install deps
      uses: ./.github/actions/install-build-deps
      with:
        ozone-version: ${{ inputs.ozone_version }}
        kube_config: ${{ inputs.lke_creds }}

    - name: Get version
      if: inputs.is_release_version == 'true'
      id: version
      uses: ./.github/actions/get-version
      with:
        env: ${{ inputs.env }}

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}

    - name: "Ozone - Build non-release."
      if: inputs.is_release_version == 'false'
      shell: bash
      run: cd $GITHUB_WORKSPACE && ozone -d -c ${{ inputs.ozone_context }} run "build-${{ inputs.service_name }}"
      env:
        GIT_BRANCH: ${{ github.head_ref }}
        DOCKER_BUILDKIT: "1"

    - name: "Ozone - Build release."
      if: inputs.is_release_version == 'true'
      shell: bash
      run: cd $GITHUB_WORKSPACE && ozone -d -c ${{ inputs.ozone_context }} run "build-${{ inputs.service_name }}"
      env:
        GIT_BRANCH: ${{ github.head_ref }}
        GITHUB_USERNAME: ${{ inputs.github_username }}
        GITHUB_TOKEN: ${{ inputs.gh_pat }}
        DOCKER_CONTAINER_VERSION_TAG: ${{ steps.version.outputs.semantic_version_from_git_log }}
        DOCKER_BUILDKIT: "1"
